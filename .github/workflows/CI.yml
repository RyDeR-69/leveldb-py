name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

env:
  NAME: leveldb
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-D warnings"
  MATURIN_VERSION: "1.7.5"

jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: "x64"

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          default: true

      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake

      - name: Configure Cargo environment
        run: source $HOME/.cargo/env

      - name: Install maturin
        run: pip install maturin==${{ env.MATURIN_VERSION }}

      - name: Build Wheels
        run: maturin build --release --out dist
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-D warnings"

      - name: Install built wheel
        run: |
          pip install leveldb --no-index --no-dependencies --find-links dist --force-reinstall

      - name: Upload wheels
        if: ${{ env.ACTIONS_RUNTIME_TOKEN }}
        uses: actions/upload-artifact@v3
        with:
          name: wheels-linux
          path: dist

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: "x64"

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: C:\Users\runneradmin\.cargo\registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: C:\Users\runneradmin\.cache\pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          default: true

      - name: Install build dependencies
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
          choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended" -y

      - name: Configure Cargo environment
        run: |
          echo "CARGO_HOME=C:\Users\runneradmin\.cargo" >> $GITHUB_ENV
          echo "PATH=$PATH;C:\Users\runneradmin\.cargo\bin" >> $GITHUB_ENV

      - name: Install maturin
        run: pip install maturin==${{ env.MATURIN_VERSION }}

      - name: Build Wheels
        run: maturin build --release --out dist
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-D warnings"

      - name: Install built wheel
        run: |
          pip install leveldb --no-index --no-dependencies --find-links dist --force-reinstall

      - name: Upload wheels
        if: ${{ env.ACTIONS_RUNTIME_TOKEN }}
        uses: actions/upload-artifact@v3
        with:
          name: wheels-windows
          path: dist

  build-macos:
    name: Build on macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: "x64"

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          default: true

      - name: Install build dependencies
        run: brew install cmake

      - name: Configure Cargo environment
        run: source $HOME/.cargo/env

      - name: Install maturin
        run: pip install maturin==${{ env.MATURIN_VERSION }}

      - name: Build Wheels
        run: maturin build --release --out dist
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-D warnings"

      - name: Install built wheel
        run: |
          pip install leveldb --no-index --no-dependencies --find-links dist --force-reinstall

      - name: Upload wheels
        if: ${{ env.ACTIONS_RUNTIME_TOKEN }}
        uses: actions/upload-artifact@v3
        with:
          name: wheels-macos
          path: dist
